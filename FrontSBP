import os
import requests
from datetime import datetime

# Fetch environment variables
API_TOKEN = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzY29wZXMiOlsic2NpbSIsInByb3Zpc2lvbmluZyIsInByaXZhdGU6KiIsInNoYXJlZDoqIiwia2IiLCJ0aW06NTYzOTA3MyJdLCJpYXQiOjE3MTc0Mzk5ODYsImlzcyI6ImZyb250Iiwic3ViIjoiMWJkNjBiZTFjMTc1MDVlNjQ0Y2QiLCJqdGkiOiI4MGZmYjk1NDkyM2I2ZDdlIn0.8q5l53xCueU3OU5I0_amFfpk_tgVZ1zNeYeBCeSJqnY'
INBOX_ID = 'inb_8wrvl' 
DOWNLOAD_DIR = '/Users/Cash/Desktop/Lumen/FSM/LumenProject/report.xsls'  

if not API_TOKEN:
    raise ValueError("No API token provided. Please set the FRONT_API_TOKEN environment variable.")

# Set up headers for authentication
headers = {
    'Authorization': f'Bearer {API_TOKEN}',
    'Accept': 'application/json'
}

# Create session
session = requests.Session()
session.headers.update(headers)

def sanitize_string(s):
    return s.encode('ascii', 'ignore').decode('ascii')

def get_conversations():
    url = f'https://api2.frontapp.com/inboxes/{INBOX_ID}/conversations'
    response = session.get(url, headers=headers)
    response.raise_for_status()
    return response.json().get('_results', [])

def get_attachments(conversation_id):
    url = f'https://api2.frontapp.com/conversations/{conversation_id}/events'
    response = session.get(url, headers=headers)
    response.raise_for_status()
    events = response.json().get('_results', [])
    attachments = []
    for event in events:
        if 'attachments' in event:
            attachments.extend(event['attachments'])
    return attachments

def download_attachment(attachment):
    url = attachment['url']
    filename = attachment['filename']
    response = session.get(url, headers=headers)
    response.raise_for_status()

    # Ensure download directory exists
    os.makedirs(DOWNLOAD_DIR, exist_ok=True)

    # Save the file
    file_path = os.path.join(DOWNLOAD_DIR, sanitize_string(filename))
    with open(file_path, 'wb') as f:
        f.write(response.content)
    print(f'Downloaded {sanitize_string(filename)} to {file_path}')

def main():
    try:
        print(f"Fetching conversations from inbox ID: {INBOX_ID}...")
        conversations = get_conversations()
        if not conversations:
            print("No conversations found.")
        else:
            for conversation in conversations:
                conversation_id = conversation['id']
                conversation_subject = conversation.get('subject', 'No Subject')
                conversation_date = datetime.fromtimestamp(conversation['created_at']).strftime('%Y-%m-%d %H:%M:%S')
                print(f"Processing conversation ID: {conversation_id}, Subject: {sanitize_string(conversation_subject)}, Date: {conversation_date}")
                attachments = get_attachments(conversation_id)
                if not attachments:
                    print("No attachments found in this conversation.")
                for attachment in attachments:
                    print(f"Found attachment: {sanitize_string(attachment['filename'])}")
                    if attachment['filename'].endswith('.xlsx'):
                        try:
                            download_attachment(attachment)
                        except Exception as e:
                            print(f"Failed to download {attachment['filename']}: {e}")
                    else:
                        print(f"Attachment {sanitize_string(attachment['filename'])} is not an Excel file.")
    except requests.exceptions.HTTPError as err:
        print(f"HTTP error occurred: {err}")
    except Exception as err:
        print(f"An error occurred: {err}")

if __name__ == '__main__':
    main()
