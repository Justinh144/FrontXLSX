import os
import requests
from datetime import datetime

API_TOKEN = ''
INBOX_ID = '' 
DOWNLOAD_DIR = ''  

if not API_TOKEN:
    raise ValueError("No API token provided. Please set the API token.")

headers = {
    'Authorization': f'Bearer {API_TOKEN}',
    'Accept': 'application/json'
}

session = requests.Session()
session.headers.update(headers)

def sanitize_string(s):
    return s.encode('ascii', 'ignore').decode('ascii')

def get_conversation_details(conversation_id):
    url = f'https://api2.frontapp.com/conversations/{conversation_id}'
    response = session.get(url, headers=headers)
    response.raise_for_status()
    return response.json()

def get_messages(conversation_id):
    url = f'https://api2.frontapp.com/conversations/{conversation_id}/messages'
    response = session.get(url, headers=headers)
    response.raise_for_status()
    messages = response.json().get('_results', [])
    return messages


def get_attachments(conversation_id):
    url = f'https://api2.frontapp.com/conversations/{conversation_id}/events'
    response = session.get(url, headers=headers)
    response.raise_for_status()
    events = response.json().get('_results', [])
    attachments = []
    for event in events:
        if 'attachments' in event:
            attachments.extend(event['attachments'])
    return attachments

def download_attachment(attachment):
    url = attachment['url']
    filename = attachment['filename']
    response = session.get(url, headers=headers)
    response.raise_for_status()
    os.makedirs(DOWNLOAD_DIR, exist_ok=True)
    file_path = os.path.join(DOWNLOAD_DIR, sanitize_string(filename))
    with open(file_path, 'wb') as f:
        f.write(response.content)
    print(f'Downloaded {sanitize_string(filename)} to {file_path}')

def main(target_conversation_id):
    try:
        print(f"Fetching details for conversation ID: {target_conversation_id}...")
        conversation_details = get_conversation_details(target_conversation_id)
        print(f"Details retrieved: {conversation_details}")
        messages = get_messages(target_conversation_id)
        found_attachments = False
        for message in messages:
            if 'attachments' in message:
                found_attachments = True
                for attachment in message['attachments']:
                    print(f"Found attachment: {sanitize_string(attachment['filename'])}")
                    download_attachment(attachment)
        if not found_attachments:
            print("No attachments found in messages.")
    except requests.exceptions.HTTPError as err:
        print(f"HTTP error occurred: {err}")
    except Exception as err:
        print(f"An error occurred: {err}")


if __name__ == '__main__':
    target_conversation_id = '100870752858'  # Adjust this to the conversation ID you are interested in
    main(target_conversation_id)
